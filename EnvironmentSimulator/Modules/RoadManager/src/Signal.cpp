#include "Signal.hpp"

const std::map<std::string, Signal::Type> Signal::types_mapping_ = {
	{"TYPE_UNKNOWN", Signal::TYPE_UNKNOWN},
	{"TYPE_OTHER", Signal::TYPE_OTHER},
	{"TYPE_DANGER_SPOT", Signal::TYPE_DANGER_SPOT},
	{"TYPE_ZEBRA_CROSSING", Signal::TYPE_ZEBRA_CROSSING},
	{"TYPE_FLIGHT", Signal::TYPE_FLIGHT},
	{"TYPE_CATTLE", Signal::TYPE_CATTLE},
	{"TYPE_HORSE_RIDERS", Signal::TYPE_HORSE_RIDERS},
	{"TYPE_AMPHIBIANS", Signal::TYPE_AMPHIBIANS},
	{"TYPE_FALLING_ROCKS", Signal::TYPE_FALLING_ROCKS},
	{"TYPE_SNOW_OR_ICE", Signal::TYPE_SNOW_OR_ICE},
	{"TYPE_LOOSE_GRAVEL", Signal::TYPE_LOOSE_GRAVEL},
	{"TYPE_WATERSIDE", Signal::TYPE_WATERSIDE},
	{"TYPE_CLEARANCE", Signal::TYPE_CLEARANCE},
	{"TYPE_MOVABLE_BRIDGE", Signal::TYPE_MOVABLE_BRIDGE},
	{"TYPE_RIGHT_BEFORE_LEFT_NEXT_INTERSECTION", Signal::TYPE_RIGHT_BEFORE_LEFT_NEXT_INTERSECTION},
	{"TYPE_TURN_LEFT", Signal::TYPE_TURN_LEFT},
	{"TYPE_TURN_RIGHT", Signal::TYPE_TURN_RIGHT},
	{"TYPE_DOUBLE_TURN_LEFT", Signal::TYPE_DOUBLE_TURN_LEFT},
	{"TYPE_DOUBLE_TURN_RIGHT", Signal::TYPE_DOUBLE_TURN_RIGHT},
	{"TYPE_HILL_DOWNWARDS", Signal::TYPE_HILL_DOWNWARDS},
	{"TYPE_HILL_UPWARDS", Signal::TYPE_HILL_UPWARDS},
	{"TYPE_UNEVEN_ROAD", Signal::TYPE_UNEVEN_ROAD},
	{"TYPE_ROAD_SLIPPERY_WET_OR_DIRTY", Signal::TYPE_ROAD_SLIPPERY_WET_OR_DIRTY},
	{"TYPE_SIDE_WINDS", Signal::TYPE_SIDE_WINDS},
	{"TYPE_ROAD_NARROWING", Signal::TYPE_ROAD_NARROWING},
	{"TYPE_ROAD_NARROWING_RIGHT", Signal::TYPE_ROAD_NARROWING_RIGHT},
	{"TYPE_ROAD_NARROWING_LEFT", Signal::TYPE_ROAD_NARROWING_LEFT},
	{"TYPE_ROAD_WORKS", Signal::TYPE_ROAD_WORKS},
	{"TYPE_TRAFFIC_QUEUES", Signal::TYPE_TRAFFIC_QUEUES},
	{"TYPE_TWO_WAY_TRAFFIC", Signal::TYPE_TWO_WAY_TRAFFIC},
	{"TYPE_ATTENTION_TRAFFIC_LIGHT", Signal::TYPE_ATTENTION_TRAFFIC_LIGHT},
	{"TYPE_PEDESTRIANS", Signal::TYPE_PEDESTRIANS},
	{"TYPE_CHILDREN_CROSSING", Signal::TYPE_CHILDREN_CROSSING},
	{"TYPE_CYCLE_ROUTE", Signal::TYPE_CYCLE_ROUTE},
	{"TYPE_DEER_CROSSING", Signal::TYPE_DEER_CROSSING},
	{"TYPE_UNGATED_LEVEL_CROSSING", Signal::TYPE_UNGATED_LEVEL_CROSSING},
	{"TYPE_LEVEL_CROSSING_MARKER", Signal::TYPE_LEVEL_CROSSING_MARKER},
	{"TYPE_RAILWAY_TRAFFIC_PRIORITY", Signal::TYPE_RAILWAY_TRAFFIC_PRIORITY},
	{"TYPE_GIVE_WAY", Signal::TYPE_GIVE_WAY},
	{"TYPE_STOP", Signal::TYPE_STOP},
	{"TYPE_PRIORITY_TO_OPPOSITE_DIRECTION", Signal::TYPE_PRIORITY_TO_OPPOSITE_DIRECTION},
	{"TYPE_PRIORITY_TO_OPPOSITE_DIRECTION_UPSIDE_DOWN",
	 Signal::TYPE_PRIORITY_TO_OPPOSITE_DIRECTION_UPSIDE_DOWN},
	{"TYPE_PRESCRIBED_LEFT_TURN", Signal::TYPE_PRESCRIBED_LEFT_TURN},
	{"TYPE_PRESCRIBED_RIGHT_TURN", Signal::TYPE_PRESCRIBED_RIGHT_TURN},
	{"TYPE_PRESCRIBED_STRAIGHT", Signal::TYPE_PRESCRIBED_STRAIGHT},
	{"TYPE_PRESCRIBED_RIGHT_WAY", Signal::TYPE_PRESCRIBED_RIGHT_WAY},
	{"TYPE_PRESCRIBED_LEFT_WAY", Signal::TYPE_PRESCRIBED_LEFT_WAY},
	{"TYPE_PRESCRIBED_RIGHT_TURN_AND_STRAIGHT", Signal::TYPE_PRESCRIBED_RIGHT_TURN_AND_STRAIGHT},
	{"TYPE_PRESCRIBED_LEFT_TURN_AND_STRAIGHT", Signal::TYPE_PRESCRIBED_LEFT_TURN_AND_STRAIGHT},
	{"TYPE_PRESCRIBED_LEFT_TURN_AND_RIGHT_TURN", Signal::TYPE_PRESCRIBED_LEFT_TURN_AND_RIGHT_TURN},
	{"TYPE_PRESCRIBED_LEFT_TURN_RIGHT_TURN_AND_STRAIGHT",
	 Signal::TYPE_PRESCRIBED_LEFT_TURN_RIGHT_TURN_AND_STRAIGHT},
	{"TYPE_ROUNDABOUT", Signal::TYPE_ROUNDABOUT},
	{"TYPE_ONEWAY_LEFT", Signal::TYPE_ONEWAY_LEFT},
	{"TYPE_ONEWAY_RIGHT", Signal::TYPE_ONEWAY_RIGHT},
	{"TYPE_PASS_LEFT", Signal::TYPE_PASS_LEFT},
	{"TYPE_PASS_RIGHT", Signal::TYPE_PASS_RIGHT},
	{"TYPE_SIDE_LANE_OPEN_FOR_TRAFFIC", Signal::TYPE_SIDE_LANE_OPEN_FOR_TRAFFIC},
	{"TYPE_SIDE_LANE_CLOSED_FOR_TRAFFIC", Signal::TYPE_SIDE_LANE_CLOSED_FOR_TRAFFIC},
	{"TYPE_SIDE_LANE_CLOSING_FOR_TRAFFIC", Signal::TYPE_SIDE_LANE_CLOSING_FOR_TRAFFIC},
	{"TYPE_BUS_STOP", Signal::TYPE_BUS_STOP},
	{"TYPE_TAXI_STAND", Signal::TYPE_TAXI_STAND},
	{"TYPE_BICYCLES_ONLY", Signal::TYPE_BICYCLES_ONLY},
	{"TYPE_HORSE_RIDERS_ONLY", Signal::TYPE_HORSE_RIDERS_ONLY},
	{"TYPE_PEDESTRIANS_ONLY", Signal::TYPE_PEDESTRIANS_ONLY},
	{"TYPE_BICYCLES_PEDESTRIANS_SHARED_ONLY", Signal::TYPE_BICYCLES_PEDESTRIANS_SHARED_ONLY},
	{"TYPE_BICYCLES_PEDESTRIANS_SEPARATED_LEFT_ONLY", Signal::TYPE_BICYCLES_PEDESTRIANS_SEPARATED_LEFT_ONLY},
	{"TYPE_BICYCLES_PEDESTRIANS_SEPARATED_RIGHT_ONLY",
	 Signal::TYPE_BICYCLES_PEDESTRIANS_SEPARATED_RIGHT_ONLY},
	{"TYPE_PEDESTRIAN_ZONE_BEGIN", Signal::TYPE_PEDESTRIAN_ZONE_BEGIN},
	{"TYPE_PEDESTRIAN_ZONE_END", Signal::TYPE_PEDESTRIAN_ZONE_END},
	{"TYPE_BICYCLE_ROAD_BEGIN", Signal::TYPE_BICYCLE_ROAD_BEGIN},
	{"TYPE_BICYCLE_ROAD_END", Signal::TYPE_BICYCLE_ROAD_END},
	{"TYPE_BUS_LANE", Signal::TYPE_BUS_LANE},
	{"TYPE_BUS_LANE_BEGIN", Signal::TYPE_BUS_LANE_BEGIN},
	{"TYPE_BUS_LANE_END", Signal::TYPE_BUS_LANE_END},
	{"TYPE_ALL_PROHIBITED", Signal::TYPE_ALL_PROHIBITED},
	{"TYPE_MOTORIZED_MULTITRACK_PROHIBITED", Signal::TYPE_MOTORIZED_MULTITRACK_PROHIBITED},
	{"TYPE_TRUCKS_PROHIBITED", Signal::TYPE_TRUCKS_PROHIBITED},
	{"TYPE_BICYCLES_PROHIBITED", Signal::TYPE_BICYCLES_PROHIBITED},
	{"TYPE_MOTORCYCLES_PROHIBITED", Signal::TYPE_MOTORCYCLES_PROHIBITED},
	{"TYPE_MOPEDS_PROHIBITED", Signal::TYPE_MOPEDS_PROHIBITED},
	{"TYPE_HORSE_RIDERS_PROHIBITED", Signal::TYPE_HORSE_RIDERS_PROHIBITED},
	{"TYPE_HORSE_CARRIAGES_PROHIBITED", Signal::TYPE_HORSE_CARRIAGES_PROHIBITED},
	{"TYPE_CATTLE_PROHIBITED", Signal::TYPE_CATTLE_PROHIBITED},
	{"TYPE_BUSES_PROHIBITED", Signal::TYPE_BUSES_PROHIBITED},
	{"TYPE_CARS_PROHIBITED", Signal::TYPE_CARS_PROHIBITED},
	{"TYPE_CARS_TRAILERS_PROHIBITED", Signal::TYPE_CARS_TRAILERS_PROHIBITED},
	{"TYPE_TRUCKS_TRAILERS_PROHIBITED", Signal::TYPE_TRUCKS_TRAILERS_PROHIBITED},
	{"TYPE_TRACTORS_PROHIBITED", Signal::TYPE_TRACTORS_PROHIBITED},
	{"TYPE_PEDESTRIANS_PROHIBITED", Signal::TYPE_PEDESTRIANS_PROHIBITED},
	{"TYPE_MOTOR_VEHICLES_PROHIBITED", Signal::TYPE_MOTOR_VEHICLES_PROHIBITED},
	{"TYPE_HAZARDOUS_GOODS_VEHICLES_PROHIBITED", Signal::TYPE_HAZARDOUS_GOODS_VEHICLES_PROHIBITED},
	{"TYPE_OVER_WEIGHT_VEHICLES_PROHIBITED", Signal::TYPE_OVER_WEIGHT_VEHICLES_PROHIBITED},
	{"TYPE_VEHICLES_AXLE_OVER_WEIGHT_PROHIBITED", Signal::TYPE_VEHICLES_AXLE_OVER_WEIGHT_PROHIBITED},
	{"TYPE_VEHICLES_EXCESS_WIDTH_PROHIBITED", Signal::TYPE_VEHICLES_EXCESS_WIDTH_PROHIBITED},
	{"TYPE_VEHICLES_EXCESS_HEIGHT_PROHIBITED", Signal::TYPE_VEHICLES_EXCESS_HEIGHT_PROHIBITED},
	{"TYPE_VEHICLES_EXCESS_LENGTH_PROHIBITED", Signal::TYPE_VEHICLES_EXCESS_LENGTH_PROHIBITED},
	{"TYPE_DO_NOT_ENTER", Signal::TYPE_DO_NOT_ENTER},
	{"TYPE_SNOW_CHAINS_REQUIRED", Signal::TYPE_SNOW_CHAINS_REQUIRED},
	{"TYPE_WATER_POLLUTANT_VEHICLES_PROHIBITED", Signal::TYPE_WATER_POLLUTANT_VEHICLES_PROHIBITED},
	{"TYPE_ENVIRONMENTAL_ZONE_BEGIN", Signal::TYPE_ENVIRONMENTAL_ZONE_BEGIN},
	{"TYPE_ENVIRONMENTAL_ZONE_END", Signal::TYPE_ENVIRONMENTAL_ZONE_END},
	{"TYPE_NO_U_TURN_LEFT", Signal::TYPE_NO_U_TURN_LEFT},
	{"TYPE_NO_U_TURN_RIGHT", Signal::TYPE_NO_U_TURN_RIGHT},
	{"TYPE_PRESCRIBED_U_TURN_LEFT", Signal::TYPE_PRESCRIBED_U_TURN_LEFT},
	{"TYPE_PRESCRIBED_U_TURN_RIGHT", Signal::TYPE_PRESCRIBED_U_TURN_RIGHT},
	{"TYPE_MINIMUM_DISTANCE_FOR_TRUCKS", Signal::TYPE_MINIMUM_DISTANCE_FOR_TRUCKS},
	{"TYPE_SPEED_LIMIT_BEGIN", Signal::TYPE_SPEED_LIMIT_BEGIN},
	{"TYPE_SPEED_LIMIT_ZONE_BEGIN", Signal::TYPE_SPEED_LIMIT_ZONE_BEGIN},
	{"TYPE_SPEED_LIMIT_ZONE_END", Signal::TYPE_SPEED_LIMIT_ZONE_END},
	{"TYPE_MINIMUM_SPEED_BEGIN", Signal::TYPE_MINIMUM_SPEED_BEGIN},
	{"TYPE_OVERTAKING_BAN_BEGIN", Signal::TYPE_OVERTAKING_BAN_BEGIN},
	{"TYPE_OVERTAKING_BAN_FOR_TRUCKS_BEGIN", Signal::TYPE_OVERTAKING_BAN_FOR_TRUCKS_BEGIN},
	{"TYPE_SPEED_LIMIT_END", Signal::TYPE_SPEED_LIMIT_END},
	{"TYPE_MINIMUM_SPEED_END", Signal::TYPE_MINIMUM_SPEED_END},
	{"TYPE_OVERTAKING_BAN_END", Signal::TYPE_OVERTAKING_BAN_END},
	{"TYPE_OVERTAKING_BAN_FOR_TRUCKS_END", Signal::TYPE_OVERTAKING_BAN_FOR_TRUCKS_END},
	{"TYPE_ALL_RESTRICTIONS_END", Signal::TYPE_ALL_RESTRICTIONS_END},
	{"TYPE_NO_STOPPING", Signal::TYPE_NO_STOPPING},
	{"TYPE_NO_PARKING", Signal::TYPE_NO_PARKING},
	{"TYPE_NO_PARKING_ZONE_BEGIN", Signal::TYPE_NO_PARKING_ZONE_BEGIN},
	{"TYPE_NO_PARKING_ZONE_END", Signal::TYPE_NO_PARKING_ZONE_END},
	{"TYPE_RIGHT_OF_WAY_NEXT_INTERSECTION", Signal::TYPE_RIGHT_OF_WAY_NEXT_INTERSECTION},
	{"TYPE_RIGHT_OF_WAY_BEGIN", Signal::TYPE_RIGHT_OF_WAY_BEGIN},
	{"TYPE_RIGHT_OF_WAY_END", Signal::TYPE_RIGHT_OF_WAY_END},
	{"TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION", Signal::TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION},
	{"TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION_UPSIDE_DOWN",
	 Signal::TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION_UPSIDE_DOWN},
	{"TYPE_TOWN_BEGIN", Signal::TYPE_TOWN_BEGIN},
	{"TYPE_TOWN_END", Signal::TYPE_TOWN_END},
	{"TYPE_CAR_PARKING", Signal::TYPE_CAR_PARKING},
	{"TYPE_CAR_PARKING_ZONE_BEGIN", Signal::TYPE_CAR_PARKING_ZONE_BEGIN},
	{"TYPE_CAR_PARKING_ZONE_END", Signal::TYPE_CAR_PARKING_ZONE_END},
	{"TYPE_SIDEWALK_HALF_PARKING_LEFT", Signal::TYPE_SIDEWALK_HALF_PARKING_LEFT},
	{"TYPE_SIDEWALK_HALF_PARKING_RIGHT", Signal::TYPE_SIDEWALK_HALF_PARKING_RIGHT},
	{"TYPE_SIDEWALK_PARKING_LEFT", Signal::TYPE_SIDEWALK_PARKING_LEFT},
	{"TYPE_SIDEWALK_PARKING_RIGHT", Signal::TYPE_SIDEWALK_PARKING_RIGHT},
	{"TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_LEFT", Signal::TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_LEFT},
	{"TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_RIGHT",
	 Signal::TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_RIGHT},
	{"TYPE_SIDEWALK_PERPENDICULAR_PARKING_LEFT", Signal::TYPE_SIDEWALK_PERPENDICULAR_PARKING_LEFT},
	{"TYPE_SIDEWALK_PERPENDICULAR_PARKING_RIGHT", Signal::TYPE_SIDEWALK_PERPENDICULAR_PARKING_RIGHT},
	{"TYPE_LIVING_STREET_BEGIN", Signal::TYPE_LIVING_STREET_BEGIN},
	{"TYPE_LIVING_STREET_END", Signal::TYPE_LIVING_STREET_END},
	{"TYPE_TUNNEL", Signal::TYPE_TUNNEL},
	{"TYPE_EMERGENCY_STOPPING_LEFT", Signal::TYPE_EMERGENCY_STOPPING_LEFT},
	{"TYPE_EMERGENCY_STOPPING_RIGHT", Signal::TYPE_EMERGENCY_STOPPING_RIGHT},
	{"TYPE_HIGHWAY_BEGIN", Signal::TYPE_HIGHWAY_BEGIN},
	{"TYPE_HIGHWAY_END", Signal::TYPE_HIGHWAY_END},
	{"TYPE_EXPRESSWAY_BEGIN", Signal::TYPE_EXPRESSWAY_BEGIN},
	{"TYPE_EXPRESSWAY_END", Signal::TYPE_EXPRESSWAY_END},
	{"TYPE_NAMED_HIGHWAY_EXIT", Signal::TYPE_NAMED_HIGHWAY_EXIT},
	{"TYPE_NAMED_EXPRESSWAY_EXIT", Signal::TYPE_NAMED_EXPRESSWAY_EXIT},
	{"TYPE_NAMED_ROAD_EXIT", Signal::TYPE_NAMED_ROAD_EXIT},
	{"TYPE_HIGHWAY_EXIT", Signal::TYPE_HIGHWAY_EXIT},
	{"TYPE_EXPRESSWAY_EXIT", Signal::TYPE_EXPRESSWAY_EXIT},
	{"TYPE_ONEWAY_STREET", Signal::TYPE_ONEWAY_STREET},
	{"TYPE_CROSSING_GUARDS", Signal::TYPE_CROSSING_GUARDS},
	{"TYPE_DEADEND", Signal::TYPE_DEADEND},
	{"TYPE_DEADEND_EXCLUDING_DESIGNATED_ACTORS", Signal::TYPE_DEADEND_EXCLUDING_DESIGNATED_ACTORS},
	{"TYPE_FIRST_AID_STATION", Signal::TYPE_FIRST_AID_STATION},
	{"TYPE_POLICE_STATION", Signal::TYPE_POLICE_STATION},
	{"TYPE_TELEPHONE", Signal::TYPE_TELEPHONE},
	{"TYPE_FILLING_STATION", Signal::TYPE_FILLING_STATION},
	{"TYPE_HOTEL", Signal::TYPE_HOTEL},
	{"TYPE_INN", Signal::TYPE_INN},
	{"TYPE_KIOSK", Signal::TYPE_KIOSK},
	{"TYPE_TOILET", Signal::TYPE_TOILET},
	{"TYPE_CHAPEL", Signal::TYPE_CHAPEL},
	{"TYPE_TOURIST_INFO", Signal::TYPE_TOURIST_INFO},
	{"TYPE_REPAIR_SERVICE", Signal::TYPE_REPAIR_SERVICE},
	{"TYPE_PEDESTRIAN_UNDERPASS", Signal::TYPE_PEDESTRIAN_UNDERPASS},
	{"TYPE_PEDESTRIAN_BRIDGE", Signal::TYPE_PEDESTRIAN_BRIDGE},
	{"TYPE_CAMPER_PLACE", Signal::TYPE_CAMPER_PLACE},
	{"TYPE_ADVISORY_SPEED_LIMIT_BEGIN", Signal::TYPE_ADVISORY_SPEED_LIMIT_BEGIN},
	{"TYPE_ADVISORY_SPEED_LIMIT_END", Signal::TYPE_ADVISORY_SPEED_LIMIT_END},
	{"TYPE_PLACE_NAME", Signal::TYPE_PLACE_NAME},
	{"TYPE_TOURIST_ATTRACTION", Signal::TYPE_TOURIST_ATTRACTION},
	{"TYPE_TOURIST_ROUTE", Signal::TYPE_TOURIST_ROUTE},
	{"TYPE_TOURIST_AREA", Signal::TYPE_TOURIST_AREA},
	{"TYPE_SHOULDER_NOT_PASSABLE_MOTOR_VEHICLES", Signal::TYPE_SHOULDER_NOT_PASSABLE_MOTOR_VEHICLES},
	{"TYPE_SHOULDER_UNSAFE_TRUCKS_TRACTORS", Signal::TYPE_SHOULDER_UNSAFE_TRUCKS_TRACTORS},
	{"TYPE_TOLL_BEGIN", Signal::TYPE_TOLL_BEGIN},
	{"TYPE_TOLL_END", Signal::TYPE_TOLL_END},
	{"TYPE_TOLL_ROAD", Signal::TYPE_TOLL_ROAD},
	{"TYPE_CUSTOMS", Signal::TYPE_CUSTOMS},
	{"TYPE_INTERNATIONAL_BORDER_INFO", Signal::TYPE_INTERNATIONAL_BORDER_INFO},
	{"TYPE_STREETLIGHT_RED_BAND", Signal::TYPE_STREETLIGHT_RED_BAND},
	{"TYPE_FEDERAL_HIGHWAY_ROUTE_NUMBER", Signal::TYPE_FEDERAL_HIGHWAY_ROUTE_NUMBER},
	{"TYPE_HIGHWAY_ROUTE_NUMBER", Signal::TYPE_HIGHWAY_ROUTE_NUMBER},
	{"TYPE_HIGHWAY_INTERCHANGE_NUMBER", Signal::TYPE_HIGHWAY_INTERCHANGE_NUMBER},
	{"TYPE_EUROPEAN_ROUTE_NUMBER", Signal::TYPE_EUROPEAN_ROUTE_NUMBER},
	{"TYPE_FEDERAL_HIGHWAY_DIRECTION_LEFT", Signal::TYPE_FEDERAL_HIGHWAY_DIRECTION_LEFT},
	{"TYPE_FEDERAL_HIGHWAY_DIRECTION_RIGHT", Signal::TYPE_FEDERAL_HIGHWAY_DIRECTION_RIGHT},
	{"TYPE_PRIMARY_ROAD_DIRECTION_LEFT", Signal::TYPE_PRIMARY_ROAD_DIRECTION_LEFT},
	{"TYPE_PRIMARY_ROAD_DIRECTION_RIGHT", Signal::TYPE_PRIMARY_ROAD_DIRECTION_RIGHT},
	{"TYPE_SECONDARY_ROAD_DIRECTION_LEFT", Signal::TYPE_SECONDARY_ROAD_DIRECTION_LEFT},
	{"TYPE_SECONDARY_ROAD_DIRECTION_RIGHT", Signal::TYPE_SECONDARY_ROAD_DIRECTION_RIGHT},
	{"TYPE_DIRECTION_DESIGNATED_ACTORS_LEFT", Signal::TYPE_DIRECTION_DESIGNATED_ACTORS_LEFT},
	{"TYPE_DIRECTION_DESIGNATED_ACTORS_RIGHT", Signal::TYPE_DIRECTION_DESIGNATED_ACTORS_RIGHT},
	{"TYPE_ROUTING_DESIGNATED_ACTORS", Signal::TYPE_ROUTING_DESIGNATED_ACTORS},
	{"TYPE_DIRECTION_TO_HIGHWAY_LEFT", Signal::TYPE_DIRECTION_TO_HIGHWAY_LEFT},
	{"TYPE_DIRECTION_TO_HIGHWAY_RIGHT", Signal::TYPE_DIRECTION_TO_HIGHWAY_RIGHT},
	{"TYPE_DIRECTION_TO_LOCAL_DESTINATION_LEFT", Signal::TYPE_DIRECTION_TO_LOCAL_DESTINATION_LEFT},
	{"TYPE_DIRECTION_TO_LOCAL_DESTINATION_RIGHT", Signal::TYPE_DIRECTION_TO_LOCAL_DESTINATION_RIGHT},
	{"TYPE_CONSOLIDATED_DIRECTIONS", Signal::TYPE_CONSOLIDATED_DIRECTIONS},
	{"TYPE_STREET_NAME", Signal::TYPE_STREET_NAME},
	{"TYPE_DIRECTION_PREANNOUNCEMENT", Signal::TYPE_DIRECTION_PREANNOUNCEMENT},
	{"TYPE_DIRECTION_PREANNOUNCEMENT_LANE_CONFIG", Signal::TYPE_DIRECTION_PREANNOUNCEMENT_LANE_CONFIG},
	{"TYPE_DIRECTION_PREANNOUNCEMENT_HIGHWAY_ENTRIES",
	 Signal::TYPE_DIRECTION_PREANNOUNCEMENT_HIGHWAY_ENTRIES},
	{"TYPE_HIGHWAY_ANNOUNCEMENT", Signal::TYPE_HIGHWAY_ANNOUNCEMENT},
	{"TYPE_OTHER_ROAD_ANNOUNCEMENT", Signal::TYPE_OTHER_ROAD_ANNOUNCEMENT},
	{"TYPE_HIGHWAY_ANNOUNCEMENT_TRUCK_STOP", Signal::TYPE_HIGHWAY_ANNOUNCEMENT_TRUCK_STOP},
	{"TYPE_HIGHWAY_PREANNOUNCEMENT_DIRECTIONS", Signal::TYPE_HIGHWAY_PREANNOUNCEMENT_DIRECTIONS},
	{"TYPE_POLE_EXIT", Signal::TYPE_POLE_EXIT},
	{"TYPE_HIGHWAY_DISTANCE_BOARD", Signal::TYPE_HIGHWAY_DISTANCE_BOARD},
	{"TYPE_DETOUR_LEFT", Signal::TYPE_DETOUR_LEFT},
	{"TYPE_DETOUR_RIGHT", Signal::TYPE_DETOUR_RIGHT},
	{"TYPE_NUMBERED_DETOUR", Signal::TYPE_NUMBERED_DETOUR},
	{"TYPE_DETOUR_BEGIN", Signal::TYPE_DETOUR_BEGIN},
	{"TYPE_DETOUR_END", Signal::TYPE_DETOUR_END},
	{"TYPE_DETOUR_ROUTING_BOARD", Signal::TYPE_DETOUR_ROUTING_BOARD},
	{"TYPE_OPTIONAL_DETOUR", Signal::TYPE_OPTIONAL_DETOUR},
	{"TYPE_OPTIONAL_DETOUR_ROUTING", Signal::TYPE_OPTIONAL_DETOUR_ROUTING},
	{"TYPE_ROUTE_RECOMMENDATION", Signal::TYPE_ROUTE_RECOMMENDATION},
	{"TYPE_ROUTE_RECOMMENDATION_END", Signal::TYPE_ROUTE_RECOMMENDATION_END},
	{"TYPE_ANNOUNCE_LANE_TRANSITION_LEFT", Signal::TYPE_ANNOUNCE_LANE_TRANSITION_LEFT},
	{"TYPE_ANNOUNCE_LANE_TRANSITION_RIGHT", Signal::TYPE_ANNOUNCE_LANE_TRANSITION_RIGHT},
	{"TYPE_ANNOUNCE_RIGHT_LANE_END", Signal::TYPE_ANNOUNCE_RIGHT_LANE_END},
	{"TYPE_ANNOUNCE_LEFT_LANE_END", Signal::TYPE_ANNOUNCE_LEFT_LANE_END},
	{"TYPE_ANNOUNCE_RIGHT_LANE_BEGIN", Signal::TYPE_ANNOUNCE_RIGHT_LANE_BEGIN},
	{"TYPE_ANNOUNCE_LEFT_LANE_BEGIN", Signal::TYPE_ANNOUNCE_LEFT_LANE_BEGIN},
	{"TYPE_ANNOUNCE_LANE_CONSOLIDATION", Signal::TYPE_ANNOUNCE_LANE_CONSOLIDATION},
	{"TYPE_DETOUR_CITY_BLOCK", Signal::TYPE_DETOUR_CITY_BLOCK},
	{"TYPE_GATE", Signal::TYPE_GATE},
	{"TYPE_POLE_WARNING", Signal::TYPE_POLE_WARNING},
	{"TYPE_TRAFFIC_CONE", Signal::TYPE_TRAFFIC_CONE},
	{"TYPE_MOBILE_LANE_CLOSURE", Signal::TYPE_MOBILE_LANE_CLOSURE},
	{"TYPE_REFLECTOR_POST", Signal::TYPE_REFLECTOR_POST},
	{"TYPE_DIRECTIONAL_BOARD_WARNING", Signal::TYPE_DIRECTIONAL_BOARD_WARNING},
	{"TYPE_GUIDING_PLATE", Signal::TYPE_GUIDING_PLATE},
	{"TYPE_GUIDING_PLATE_WEDGES", Signal::TYPE_GUIDING_PLATE_WEDGES},
	{"TYPE_PARKING_HAZARD", Signal::TYPE_PARKING_HAZARD},
	{"TYPE_TRAFFIC_LIGHT_GREEN_ARROW", Signal::TYPE_TRAFFIC_LIGHT_GREEN_ARROW}};

Signal::Type Signal::GetTypeFromString(const std::string& type) {
	if (types_mapping_.count(type) != 0) {
		return types_mapping_.find(type)->second;
	}
	return Signal::TYPE_UNKNOWN;
}

void Signal::Save(pugi::xml_node& signals) {
	auto signal = signals.append_child("signal");
	signal.append_attribute("s").set_value(s_);
	signal.append_attribute("t").set_value(t_);
	signal.append_attribute("id").set_value(id_);
	if (!name_.empty())	 // Name is optional
		signal.append_attribute("name").set_value(name_.c_str());
	if (dynamic_)
		signal.append_attribute("dynamic").set_value("true");
	else if (!dynamic_)
		signal.append_attribute("dynamic").set_value("false");
	else
		assert(false && "Missing dynamic in road signal");

	switch (orientation_) {
	case RoadObject::Orientation::NEGATIVE:
		signal.append_attribute("orientation").set_value("-");
		break;
	case RoadObject::Orientation::POSITIVE:
		signal.append_attribute("orientation").set_value("+");
		break;
	case RoadObject::Orientation::NONE:
		signal.append_attribute("orientation").set_value("none");
		break;
	default:
		assert(false && "Default reached in road signal switch");
		break;
	}
	signal.append_attribute("zOffset").set_value(z_offset_);
	if (!country_.empty())	// country is optional
		signal.append_attribute("country").set_value(country_.c_str());
	// TODO: countryRevision
	signal.append_attribute("type").set_value(type_);
	// object.append_attribute("subtype").set_value() TODO:
	signal.append_attribute("value").set_value(value_);
	if (!unit_.empty())	 // unit is optional
		signal.append_attribute("unit").set_value(unit_.c_str());
	if (height_)
		signal.append_attribute("height").set_value(height_);
	if (width_)
		signal.append_attribute("width").set_value(width_);
	if (!text_.empty())	 // text is optional
		signal.append_attribute("text").set_value(text_.c_str());
	if (h_offset_)	// h_offset is optional
		signal.append_attribute("hOffset").set_value(h_offset_);
	if (pitch_)	 // pitch is optional
		signal.append_attribute("pitch").set_value(pitch_);
	if (roll_)	// roll is optional
		signal.append_attribute("roll").set_value(roll_);

	for (auto validity : validity_) {
		validity.Save(signal);
	}

	for (auto userData : user_data_) {
		userData->Save(signal);
	}
}
